{"version":3,"sources":["index.js"],"names":["numbers","Set","operator","Key","value","color","handleClick","myid","id","style","backgroundColor","onClick","KeyBoard","className","colSpan","rowSpan","Screen","App","useState","setValue","isNum","setIsNum","stack","setStack","calcular","stack_","myStack","lastSeeIsOp","cleanStack","tmp","reverse","i","has","push","clean","size","length","total","parseFloat","alert","value_","concat","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d8027ca7.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nconst numbers = new Set('0123456789.');\nconst operator = new Set('+-x/A=');\n\n\nfunction Key({ value, color = 0, handleClick, myid }) {\n  const colors = ['#353834', '#d82b5f', ' #2b68d8'];\n\n  return (\n    <button\n      id={myid}\n      style={{ backgroundColor: `${colors[color]}` }}\n      onClick={() => handleClick(value[0])}\n    >\n      {value}\n    </button>\n  )\n}\n\nfunction KeyBoard({ handleClick }) {\n  return (\n    <table className='keyBoard'>\n      <tbody>\n        <tr>\n          <td colSpan='2'> <Key value='AC' color='1' handleClick={handleClick} myid='clear' /> </td>\n          <td> <Key value='/' handleClick={handleClick} myid='divide' /> </td>\n          <td> <Key value='x' handleClick={handleClick} myid='multiply' /> </td>\n        </tr>\n        <tr>\n          <td> <Key value='7' handleClick={handleClick} myid='seven' /> </td>\n          <td> <Key value='8' handleClick={handleClick} myid='eight' /> </td>\n          <td> <Key value='9' handleClick={handleClick} myid='nine' /> </td>\n          <td> <Key value='-' handleClick={handleClick} myid='subtract' /> </td>\n        </tr>\n        <tr>\n          <td> <Key value='4' handleClick={handleClick} myid='four' /> </td>\n          <td> <Key value='5' handleClick={handleClick} myid='five' /> </td>\n          <td> <Key value='6' handleClick={handleClick} myid='six' /> </td>\n          <td> <Key value='+' handleClick={handleClick} myid='add' /> </td>\n        </tr>\n        <tr>\n          <td> <Key value='1' handleClick={handleClick} myid='one' /> </td>\n          <td> <Key value='2' handleClick={handleClick} myid='two' /> </td>\n          <td> <Key value='3' handleClick={handleClick} myid='three' /> </td>\n        </tr>\n        <tr>\n          <td colSpan='2'> <Key value='0' handleClick={handleClick} myid='zero' /> </td>\n          <td> <Key value='.' handleClick={handleClick} myid='decimal' /> </td>\n          <td rowSpan='2'> <Key value='=' color='2' handleClick={handleClick} myid='equals' /> </td>\n        </tr>\n      </tbody>\n    </table>\n  )\n}\n\nfunction Screen({ value }) {\n  return (\n    <div className='screen' id='display'>\n      <p className='value'> {value} </p>\n    </div>\n  )\n}\n\nfunction App() {\n  const [value, setValue] = useState('0');\n  const [isNum, setIsNum] = useState(true);\n  const [stack, setStack] = useState([]);\n\n  const clean = (stack_) => {\n    let lastSeeIsOp = false;\n    const cleanStack = [];\n    const tmp = stack_.reverse();\n    for (let i of tmp) {\n      if (operator.has(i) && lastSeeIsOp) continue;\n      else if (operator.has(i)) lastSeeIsOp = true;\n      else lastSeeIsOp = false;\n      cleanStack.push(i);\n    }\n\n    return cleanStack.reverse();\n  }\n\n  const calcular = (stack_) => {\n    const myStack = clean(stack_);\n    const size = myStack.length - !(myStack.length & 1)\n    let total = parseFloat(myStack[0]);\n\n    for (let i = 1; i < size; i += 2) {\n      if (myStack[i] === 'x') total *= parseFloat(myStack[i + 1]);\n      if (myStack[i] === '+') total += parseFloat(myStack[i + 1]);\n      if (myStack[i] === '-') total -= parseFloat(myStack[i + 1]);\n      if (myStack[i] === '/') {\n        if (parseFloat(myStack[i + 1]) === 0) {\n          alert('Error en la operaciÃ³n a realizar');\n          return 0;\n        }\n        else total /= parseFloat(myStack[i + 1]);\n      }\n    }\n\n    return total;\n  }\n\n  const handleClick = value_ => {\n    if (value_ === 'A') {\n      setValue('0');\n      setStack([]);\n      setIsNum(true);\n    }\n    else if (value_ === '=') {\n      if (stack.length >= 2 && isNum) {\n        setValue(calcular(stack.concat(value)));\n        setStack([]);\n        setIsNum(true);\n      }\n    }\n    else if (value_ === '.') {\n      if (!value.includes('.') && isNum) setValue(value + '.');\n    }\n    else if (operator.has(value) && value_ === '-') {\n      setStack(stack.concat(value));\n      setValue(value_);\n      setIsNum(true);\n    }\n    else if (numbers.has(value_) && value === '-' && isNum) {\n      setValue((value !== '0' ? value + value_ : value_));\n    }\n    else if (numbers.has(value_) && isNum) {\n      setValue((value !== '0' ? value + value_ : value_));\n    }\n    else if (numbers.has(value_) !== isNum) {\n      setStack(stack.concat(value));\n      setValue(value_);\n      setIsNum(!isNum);\n    }\n    else {\n      setValue(value_);\n    }\n  }\n\n  return (\n    <div className='app'>\n      <Screen value={value} />\n      <KeyBoard setValue={setValue} handleClick={handleClick} />\n    </div>\n  )\n}\n\nReactDOM.render(\n  <div className='root'>\n    <App />\n  </div>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}