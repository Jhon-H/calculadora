{"version":3,"sources":["index.js"],"names":["numbers","Set","Key","value","color","handleClick","style","backgroundColor","onClick","KeyBoard","className","colSpan","rowSpan","Screen","App","useState","setValue","isNum","setIsNum","stack","setStack","value_","alert","length","stack_","size","total","parseFloat","i","toFixed","toString","calcular","concat","includes","has","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6702815e.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nconst numbers = new Set('0123456789.');\nconst operators = new Set('/x+-=A');\n\n\nfunction Key({ value, color = 0, handleClick }) {\n  const colors = ['#353834', '#d82b5f', ' #2b68d8'];\n\n  return (\n    <button\n      style={{ backgroundColor: `${colors[color]}` }}\n      onClick={() => handleClick(value[0])}\n    >\n      {value}\n    </button>\n  )\n}\n\nfunction KeyBoard({ handleClick }) {\n  return (\n    <table className='keyBoard'>\n      <tbody>\n        <tr>\n          <td colSpan='2'> <Key value='AC' color='1' handleClick={handleClick} /> </td>\n          <td> <Key value='/' handleClick={handleClick} /> </td>\n          <td> <Key value='x' handleClick={handleClick} /> </td>\n        </tr>\n        <tr>\n          <td> <Key value='7' handleClick={handleClick} /> </td>\n          <td> <Key value='8' handleClick={handleClick} /> </td>\n          <td> <Key value='9' handleClick={handleClick} /> </td>\n          <td> <Key value='-' handleClick={handleClick} /> </td>\n        </tr>\n        <tr>\n          <td> <Key value='4' handleClick={handleClick} /> </td>\n          <td> <Key value='5' handleClick={handleClick} /> </td>\n          <td> <Key value='6' handleClick={handleClick} /> </td>\n          <td> <Key value='+' handleClick={handleClick} /> </td>\n        </tr>\n        <tr>\n          <td> <Key value='1' handleClick={handleClick} /> </td>\n          <td> <Key value='2' handleClick={handleClick} /> </td>\n          <td> <Key value='3' handleClick={handleClick} /> </td>\n        </tr>\n        <tr>\n          <td colSpan='2'> <Key value='0' handleClick={handleClick} /> </td>\n          <td> <Key value='.' handleClick={handleClick} /> </td>\n          <td rowSpan='2'> <Key value='=' color='2' handleClick={handleClick} /> </td>\n        </tr>\n      </tbody>\n    </table>\n  )\n}\n\nfunction Screen({ value }) {\n  return (\n    <div className='screen'>\n      <p className='value'> {value} </p>\n    </div>\n  )\n}\n\nfunction App() {\n  const [value, setValue] = useState('0');\n  const [isNum, setIsNum] = useState(true);\n  const [stack, setStack] = useState([]);\n\n  const calcular = (stack_) => {\n    const size = stack_.length - !(stack_.length & 1)\n    let total = parseFloat(stack_[0]);\n\n\n    for (let i = 1; i < size; i += 2) {\n      if (stack_[i] == 'x') total *= parseFloat(stack_[i + 1]);\n      if (stack_[i] == '+') total += parseFloat(stack_[i + 1]);\n      if (stack_[i] == '-') total -= parseFloat(stack_[i + 1]);\n      if (stack_[i] == '/') {\n        if (parseFloat(stack_[i + 1]) === 0) {\n          alert('Error en la operaciÃ³n a realizar');\n          return 0;\n        }\n        else total /= parseFloat(stack_[i + 1]);\n      }\n    }\n\n    return  (total.toFixed(3)).toString();\n  }\n\n  const handleClick = value_ => {\n    if (value_ === 'A') {\n      setValue('0');\n      setStack([]);\n      setIsNum(true);\n    }\n    else if (value_ === '=') {\n      alert('a');\n      if (stack.length >= 2 && isNum) {\n        setValue(calcular(stack.concat(value)));\n        setStack([]);\n        setIsNum(true);\n      }\n    }\n    else if (value_ === '.') {\n      if (!value.includes('.') && isNum) setValue(value + '.');\n    }\n    else if (!numbers.has(value) && value_ == '-') {\n      setStack(stack.concat(value));\n      setValue(value_);\n      setIsNum(true);\n    }\n    else if (numbers.has(value_) && value === '-' && isNum) {\n      setValue((value !== '0' ? value + value_ : value_));\n    }\n    else if (numbers.has(value_) && isNum) {\n      setValue((value !== '0' ? value + value_ : value_));\n    }\n    else if (numbers.has(value_) != isNum) {\n      setStack(stack.concat(value));\n      setValue(value_);\n      setIsNum(!isNum);\n    }\n    else {\n      setValue(value_);\n    }\n  }\n\n  return (\n    <div className='app'>\n      <Screen value={value} />\n      <KeyBoard setValue={setValue} handleClick={handleClick} />\n    </div>\n  )\n}\n\nReactDOM.render(\n  <div className='root'>\n    <App />\n  </div>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}